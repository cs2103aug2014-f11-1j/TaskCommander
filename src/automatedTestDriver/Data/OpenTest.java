package automatedTestDriver.Data;

import static org.junit.Assert.*;

import java.util.Arrays;
import java.util.Calendar;
import java.util.Collection;
import java.util.Date;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.junit.runners.Parameterized;

import com.taskcommander.TaskCommander;


@RunWith(Parameterized.class)
public class OpenTest {
	private int index;
	private String expected;
	
	public OpenTest(int index, String expected) {
		this.index = index;
		this.expected = expected;
	}
	
	@Parameterized.Parameters
	public static Collection<Object[]> cases() {
		TaskCommander.data.clearTasks();
		
		Calendar cal = Calendar.getInstance();
		cal.set(2014, Calendar.NOVEMBER, 10, 15, 00);
		Date start = cal.getTime();
		cal.set(2014,  Calendar.NOVEMBER, 10, 16, 00);
		Date end = cal.getTime();
		String title = "Watch a Movie";
		
		TaskCommander.data.addFloatingTask(title);
		TaskCommander.data.done(0);
		TaskCommander.data.addDeadlineTask(title, start);
		TaskCommander.data.done(1);
		TaskCommander.data.addTimedTask(title, start, end);
		TaskCommander.data.done(2);
		
		return Arrays.asList(new Object[][] {
				{ 0, "Opened: \"Watch a Movie\""},
				{ 1, "Opened: [by Mon Nov 10 '14 15:00] \"Watch a Movie\"" },
				{ 2, "Opened: [Mon Nov 10 '14 15:00-16:00] \"Watch a Movie\""},
				{ 3, "Index does not exist. Please type a valid index."},
				{ -1, "Index does not exist. Please type a valid index."},
				{ 0, "Already opened." } 
		});
		
	}
	
	@Test
	public void testOpen() {
		assertEquals(expected, TaskCommander.data.open(index));
	}
}
